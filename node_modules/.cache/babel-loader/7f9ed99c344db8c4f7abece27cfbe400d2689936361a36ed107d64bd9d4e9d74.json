{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\AlgorithmVisualizer-master\\\\src\\\\primeComponents\\\\cell.jsx\";\nimport React, { Component } from 'react';\nimport './cell.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Cell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.getClass = () => {\n      const {\n        val,\n        isVisiting,\n        isChecking,\n        isPrime\n      } = this.props.cell;\n      if (isPrime) {\n        return \"cell cell-prime bg-success text-light m-2\";\n      } else if (isVisiting) {\n        return \"cell cell-visiting m-2\";\n      } else if (isChecking) {\n        return \"cell cell-check m-2\";\n      } else {\n        return \"cell m-2\";\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.getClass(),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.props.cell.val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Cell;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Cell","constructor","args","getClass","val","isVisiting","isChecking","isPrime","props","cell","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/primeComponents/cell.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClass()}>\n                <span >\n                    {this.props.cell.val}\n                </span>\n            </div>\n        );\n    }\n    getClass = () =>{\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\n        if(isPrime){\n            return \"cell cell-prime bg-success text-light m-2\";\n        }else if( isVisiting ){\n            return \"cell cell-visiting m-2\";\n        } else if( isChecking ){\n            return \"cell cell-check m-2\";\n        } else{\n            return \"cell m-2\";\n        }\n    }\n}\n\nexport default Cell;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,IAAI,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAUzBC,QAAQ,GAAG,MAAK;MACZ,MAAM;QAAEC,GAAG;QAAEC,UAAU;QAACC,UAAU;QAACC;MAAO,CAAC,GAAG,IAAI,CAACC,KAAK,CAACC,IAAI;MAC7D,IAAGF,OAAO,EAAC;QACP,OAAO,2CAA2C;MACtD,CAAC,MAAK,IAAIF,UAAU,EAAE;QAClB,OAAO,wBAAwB;MACnC,CAAC,MAAM,IAAIC,UAAU,EAAE;QACnB,OAAO,qBAAqB;MAChC,CAAC,MAAK;QACF,OAAO,UAAU;MACrB;IACJ,CAAC;EAAA;EApBDI,MAAMA,CAAA,EAAG;IACL,oBACIX,OAAA;MAAKY,SAAS,EAAE,IAAI,CAACR,QAAQ,CAAC,CAAE;MAAAS,QAAA,eAC5Bb,OAAA;QAAAa,QAAA,EACK,IAAI,CAACJ,KAAK,CAACC,IAAI,CAACL;MAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEd;AAaJ;AAEA,eAAehB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}