{"ast":null,"code":"var values = [];\nexport default function mergeSort(rects2) {\n  var rects = rects2.slice();\n  values = [];\n  var sz = rects2.length;\n  // console.log( \"fdsfsd\",sz );\n  sz = sz - 1;\n  mergeS(rects, 0, sz);\n  return values;\n}\nfunction merge(rects, l, m, r) {\n  //  console.log(l,\" \",r);\n  var n1 = m - l + 1;\n  var n2 = r - m;\n  var L = rects.slice(l, m + 1);\n  var R = rects.slice(m + 1, r + 1);\n  var i = 0;\n  var j = 0;\n  var k = l;\n  while (i < n1 && j < n2) {\n    if (L[i].width <= R[j].width) {\n      rects[k] = L[i];\n      i++;\n    } else {\n      rects[k] = R[j];\n      j++;\n    }\n    k++;\n  }\n  while (i < n1) {\n    rects[k] = L[i];\n    i++;\n    k++;\n  }\n  while (j < n2) {\n    rects[k] = R[j];\n    j++;\n    k++;\n  }\n}\nfunction mergeS(rects, l, r) {\n  if (l >= r) return;\n  var m = l + (r - l) / 2;\n  m = Math.floor(m);\n  // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n  mergeS(rects, l, m);\n  mergeS(rects, m + 1, r);\n  merge(rects, l, m, r);\n  var rectsCopy = rects.slice(l, r + 1);\n  var value = {\n    left: l,\n    right: r,\n    mid: m,\n    val: rectsCopy\n  };\n  values.push(value);\n}","map":{"version":3,"names":["values","mergeSort","rects2","rects","slice","sz","length","mergeS","merge","l","m","r","n1","n2","L","R","i","j","k","width","Math","floor","rectsCopy","value","left","right","mid","val","push"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/algorithms/mergeSort.js"],"sourcesContent":["let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAE;AACf,eAAe,SAASC,SAASA,CAACC,MAAM,EAAC;EACrC,IAAIC,KAAK,GAAGD,MAAM,CAACE,KAAK,CAAC,CAAC;EAC1BJ,MAAM,GAAG,EAAE;EACX,IAAIK,EAAE,GAAGH,MAAM,CAACI,MAAM;EACvB;EACCD,EAAE,GAAGA,EAAE,GAAC,CAAC;EACTE,MAAM,CAACJ,KAAK,EAAC,CAAC,EAACE,EAAE,CAAC;EAClB,OAAOL,MAAM;AACjB;AAEA,SAASQ,KAAKA,CAACL,KAAK,EAAEM,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAC;EAC5B;EACE,IAAIC,EAAE,GAAGF,CAAC,GAACD,CAAC,GAAC,CAAC;EACd,IAAII,EAAE,GAAGF,CAAC,GAACD,CAAC;EAEZ,IAAMI,CAAC,GAAGX,KAAK,CAACC,KAAK,CAACK,CAAC,EAAEC,CAAC,GAAC,CAAC,CAAC;EAC7B,IAAMK,CAAC,GAAGZ,KAAK,CAACC,KAAK,CAACM,CAAC,GAAC,CAAC,EAACC,CAAC,GAAC,CAAC,CAAC;EAC9B,IAAIK,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAGT,CAAC;EACT,OAAMO,CAAC,GAACJ,EAAE,IAAIK,CAAC,GAACJ,EAAE,EAAC;IACf,IAAIC,CAAC,CAACE,CAAC,CAAC,CAACG,KAAK,IAAIJ,CAAC,CAACE,CAAC,CAAC,CAACE,KAAK,EAAE;MAC1BhB,KAAK,CAACe,CAAC,CAAC,GAAGJ,CAAC,CAACE,CAAC,CAAC;MACfA,CAAC,EAAE;IACP,CAAC,MAAK;MACFb,KAAK,CAACe,CAAC,CAAC,GAAGH,CAAC,CAACE,CAAC,CAAC;MACfA,CAAC,EAAE;IACP;IACAC,CAAC,EAAE;EACP;EACA,OAAOF,CAAC,GAAGJ,EAAE,EAAE;IACXT,KAAK,CAACe,CAAC,CAAC,GAAGJ,CAAC,CAACE,CAAC,CAAC;IACfA,CAAC,EAAE;IACHE,CAAC,EAAE;EACP;EACA,OAAOD,CAAC,GAAGJ,EAAE,EAAE;IACXV,KAAK,CAACe,CAAC,CAAC,GAAGH,CAAC,CAACE,CAAC,CAAC;IACfA,CAAC,EAAE;IACHC,CAAC,EAAE;EACP;AAEJ;AAEA,SAASX,MAAMA,CAACJ,KAAK,EAACM,CAAC,EAACE,CAAC,EAAC;EAEtB,IAAIF,CAAC,IAAEE,CAAC,EAAG;EACX,IAAID,CAAC,GAAGD,CAAC,GAAE,CAACE,CAAC,GAACF,CAAC,IAAE,CAAC;EAClBC,CAAC,GAAGU,IAAI,CAACC,KAAK,CAACX,CAAC,CAAC;EAClB;EACCH,MAAM,CAACJ,KAAK,EAACM,CAAC,EAACC,CAAC,CAAC;EACjBH,MAAM,CAACJ,KAAK,EAACO,CAAC,GAAC,CAAC,EAACC,CAAC,CAAC;EACnBH,KAAK,CAACL,KAAK,EAACM,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC;EAClB,IAAIW,SAAS,GAAGnB,KAAK,CAACC,KAAK,CAACK,CAAC,EAACE,CAAC,GAAC,CAAC,CAAC;EAClC,IAAIY,KAAK,GAAG;IACRC,IAAI,EAACf,CAAC;IACNgB,KAAK,EAACd,CAAC;IACPe,GAAG,EAAChB,CAAC;IACLiB,GAAG,EAACL;EACR,CAAC;EACDtB,MAAM,CAAC4B,IAAI,CAACL,KAAK,CAAC;AACtB"},"metadata":{},"sourceType":"module"}