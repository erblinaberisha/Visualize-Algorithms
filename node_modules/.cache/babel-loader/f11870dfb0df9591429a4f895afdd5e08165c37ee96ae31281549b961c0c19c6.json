{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\AlgorithmVisualizer-master\\\\src\\\\AlgorithmDescription\\\\Recursive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const showModal = () => {\n    setModalOpen(true);\n  };\n  const hideModal = () => {\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning m-2 desc\",\n      onClick: showModal,\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal display-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-main1 intro\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"modal-title\",\n            children: \"Pathfinder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"close\",\n            onClick: hideModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-body intro\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pathfinding is generally the process of finding a route between two points. It is closely related to the shortest path problem in graph theory, which examines how to identify the \\\"best\\\" paths valued by different criteria (Ex. distance, cost, time consumption).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"In our scenario, the paths are valued by the number of cells they passed from START:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"simg\",\n              width: \"20\",\n              height: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this), \"to the TARGET:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"fimg\",\n              width: \"20\",\n              height: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You may click on the blank nodes to add random Walls. Or this can be made automatically by choosing a Maze Algorithm and then clicking Create Maze button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Now please choose a Path Algorithm and visualize it!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"tips\",\n            children: \"(after choosing a Path Algorithm, click on the Visualize button.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 118\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"tips\",\n            children: \"Note: if you want to remove Walls and generated Path you can do so by clicking in Clear Path and Clear Board buttons.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary my-2 my-sm-0\",\n            type: \"submit\",\n            onClick: hideModal,\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n                        .modal {\n                            position: fixed;\n                            top: 0;\n                            left: 0;\n                            width:100%;\n                            height: 100%;\n                            background: rgba(0, 0, 0, 0.6);\n                            z-index: 1000;\n                            border-radius: 5px;\n                          }\n                          \n                          .modal-main1 {\n                            position:fixed;\n                            padding: 10px;\n                            background: white;\n                            color: rgb(32, 31, 31);\n                            width: 38%;\n                            height: auto;\n                            top:50%;\n                            left:50%;\n                            transform: translate(-50%,-50%);\n                            z-index: 1000;\n                            border-radius: 5px;\n                            font-size: 20px;\n                          }\n                          \n                          .display-block {\n                              display: block;\n                          }\n                          \n                          .display-none {\n                            display: none;\n                          }\n                        .modalImage{\n                          position: fixed;\n                          z-index: 1;\n                          padding-top: 100px;\n                          left: 0;\n                          top: 0;\n                          width: 100%;\n                          height: 100%;\n                          overflow: auto;\n                          background-color: rgba(0, 0, 0, 0.6);\n                        }\n                        .intro{\n                          text-align: left;\n                          font-size: 17px;\n                          line-height: 1.6;\n                      }\n                      .tips{\n                        color: rgb(99, 99, 99);\n                        margin-top: -15px;\n                        font-size: 16px;\n                    }\n                    `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n}\n_s(MyComponent, \"CMfkJY0oHKX43wkRh7WkxSiVV1E=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","modalOpen","setModalOpen","showModal","hideModal","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","type","width","height","jsx","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/AlgorithmDescription/Recursive.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../index.css\";\r\nfunction MyComponent() {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setModalOpen(false);\r\n    };\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-warning m-2 desc\" onClick={showModal}>Description</button>\r\n\r\n                {modalOpen && (\r\n                    <div className=\"modal display-block\">\r\n                          <div class=\"modal-main1 intro\">\r\n                            <div class=\"modal-header\">\r\n                                  <h5 class=\"modal-title\">Pathfinder</h5>\r\n                                  <button type=\"button\" class=\"close\" onClick={hideModal}>&times;</button>\r\n                              </div>\r\n                            <div class=\"modal-body intro\">\r\n                              <p>\r\n                                  Pathfinding is generally the process of finding a route between two points. It is closely related to the shortest path problem in graph theory,\r\n                                  which examines how to identify the \"best\" paths valued by different criteria (Ex. distance, cost, time consumption).\r\n                              </p>\r\n                              <p>\r\n                                    In our scenario, the paths are valued by the number of cells they passed from START:\r\n                                    <div class=\"simg\" width=\"20\" height=\"20\"></div>\r\n                                    to the TARGET:\r\n                                    <div class=\"fimg\" width=\"20\" height=\"20\"></div>\r\n                                    .\r\n                              </p>\r\n                              <p>You may click on the blank nodes to add random Walls. Or this can be made automatically by choosing a Maze Algorithm and then clicking Create Maze button.</p>\r\n                              <p>Now please choose a Path Algorithm and visualize it!</p>\r\n                                <p class='tips'>(after choosing a Path Algorithm, click on the Visualize button.)</p><br />\r\n                                <p class='tips'>Note: if you want to remove Walls and generated Path you can do so by clicking in Clear Path and Clear Board buttons.</p>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                              <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\" onClick={hideModal}>OK</button>\r\n                            </div>\r\n                          </div>\r\n                  </div>\r\n                    \r\n                )}\r\n\r\n                <style jsx>\r\n                    {`\r\n                        .modal {\r\n                            position: fixed;\r\n                            top: 0;\r\n                            left: 0;\r\n                            width:100%;\r\n                            height: 100%;\r\n                            background: rgba(0, 0, 0, 0.6);\r\n                            z-index: 1000;\r\n                            border-radius: 5px;\r\n                          }\r\n                          \r\n                          .modal-main1 {\r\n                            position:fixed;\r\n                            padding: 10px;\r\n                            background: white;\r\n                            color: rgb(32, 31, 31);\r\n                            width: 38%;\r\n                            height: auto;\r\n                            top:50%;\r\n                            left:50%;\r\n                            transform: translate(-50%,-50%);\r\n                            z-index: 1000;\r\n                            border-radius: 5px;\r\n                            font-size: 20px;\r\n                          }\r\n                          \r\n                          .display-block {\r\n                              display: block;\r\n                          }\r\n                          \r\n                          .display-none {\r\n                            display: none;\r\n                          }\r\n                        .modalImage{\r\n                          position: fixed;\r\n                          z-index: 1;\r\n                          padding-top: 100px;\r\n                          left: 0;\r\n                          top: 0;\r\n                          width: 100%;\r\n                          height: 100%;\r\n                          overflow: auto;\r\n                          background-color: rgba(0, 0, 0, 0.6);\r\n                        }\r\n                        .intro{\r\n                          text-align: left;\r\n                          font-size: 17px;\r\n                          line-height: 1.6;\r\n                      }\r\n                      .tips{\r\n                        color: rgb(99, 99, 99);\r\n                        margin-top: -15px;\r\n                        font-size: 16px;\r\n                    }\r\n                    `}\r\n                </style>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}