{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nexport function bfsdfs(grid, startNode, endNode, algo) {\n  var list = [];\n  var nodesInOrder = [];\n  nodesInOrder.push(startNode);\n  list.push(startNode);\n  startNode.isVisited = true;\n  while (!!list.length) {\n    var currentNode = algo === \"bfs\" ? list.shift() : list.pop();\n    nodesInOrder.push(currentNode);\n    if (currentNode === endNode) return nodesInOrder;\n    if (algo === \"dfs\") currentNode.isVisited = true;\n    var nodesToPush = getNeighbours(grid, currentNode);\n    var _iterator = _createForOfIteratorHelper(nodesToPush),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n        if (algo === \"bfs\") {\n          node.isVisited = true;\n        }\n        node.previousNode = currentNode;\n        list.push(node);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return nodesInOrder;\n}\nfunction getNeighbours(grid, node) {\n  var neighbors = [];\n  var col = node.col,\n    row = node.row; // console.log(node);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(function (neighbor) {\n    return !neighbor.isVisited && !neighbor.isWall;\n  });\n}","map":{"version":3,"names":["bfsdfs","grid","startNode","endNode","algo","list","nodesInOrder","push","isVisited","length","currentNode","shift","pop","nodesToPush","getNeighbours","_iterator","_createForOfIteratorHelper","_step","s","n","done","node","value","previousNode","err","e","f","neighbors","col","row","filter","neighbor","isWall"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/algorithms/bfs.jsx"],"sourcesContent":["export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}"],"mappings":";;;AAAA,OAAO,SAASA,MAAMA,CAACC,IAAI,EAACC,SAAS,EAACC,OAAO,EAACC,IAAI,EAAC;EAC/C,IAAIC,IAAI,GAAG,EAAE;EACb,IAAMC,YAAY,GAAG,EAAE;EACvBA,YAAY,CAACC,IAAI,CAACL,SAAS,CAAC;EAC5BG,IAAI,CAACE,IAAI,CAACL,SAAS,CAAC;EACpBA,SAAS,CAACM,SAAS,GAAG,IAAI;EAC1B,OAAM,CAAC,CAACH,IAAI,CAACI,MAAM,EAAC;IAChB,IAAMC,WAAW,GAAIN,IAAI,KAAK,KAAK,GAAGC,IAAI,CAACM,KAAK,CAAC,CAAC,GAACN,IAAI,CAACO,GAAG,CAAC,CAAE;IAC9DN,YAAY,CAACC,IAAI,CAACG,WAAW,CAAC;IAC9B,IAAIA,WAAW,KAAKP,OAAO,EAAG,OAAOG,YAAY;IACjD,IAAIF,IAAI,KAAK,KAAK,EAAGM,WAAW,CAACF,SAAS,GAAG,IAAI;IACjD,IAAMK,WAAW,GAAGC,aAAa,CAACb,IAAI,EAACS,WAAW,CAAC;IAAC,IAAAK,SAAA,GAAAC,0BAAA,CACjCH,WAAW;MAAAI,KAAA;IAAA;MAA9B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAgC;QAAA,IAArBC,IAAI,GAAAJ,KAAA,CAAAK,KAAA;QACX,IAAGlB,IAAI,KAAK,KAAK,EAAC;UACdiB,IAAI,CAACb,SAAS,GAAG,IAAI;QACzB;QACAa,IAAI,CAACE,YAAY,GAAGb,WAAW;QAC/BL,IAAI,CAACE,IAAI,CAACc,IAAI,CAAC;MAEnB;IAAC,SAAAG,GAAA;MAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;IAAA;MAAAT,SAAA,CAAAW,CAAA;IAAA;EACL;EACA,OAAOpB,YAAY;AACvB;AAEA,SAASQ,aAAaA,CAACb,IAAI,EAACoB,IAAI,EAAC;EAC7B,IAAMM,SAAS,GAAG,EAAE;EAAC,IACdC,GAAG,GAASP,IAAI,CAAhBO,GAAG;IAAEC,GAAG,GAAIR,IAAI,CAAXQ,GAAG,EAChB;EAEC,IAAID,GAAG,GAAG,CAAC,EAAED,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,CAAC,CAACD,GAAG,GAAG,CAAC,CAAC,CAAC;EAC/C,IAAIC,GAAG,GAAG,CAAC,EAAEF,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,GAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAAC;EAC/C,IAAIC,GAAG,GAAG5B,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAEkB,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,GAAG,CAAC,CAAC,CAACD,GAAG,CAAC,CAAC;EAC7D,IAAIA,GAAG,GAAG3B,IAAI,CAAC,CAAC,CAAC,CAACQ,MAAM,GAAG,CAAC,EAAEkB,SAAS,CAACpB,IAAI,CAACN,IAAI,CAAC4B,GAAG,CAAC,CAACD,GAAG,GAAG,CAAC,CAAC,CAAC;EAChE,OAAOD,SAAS,CAACG,MAAM,CAAC,UAAAC,QAAQ;IAAA,OAAK,CAACA,QAAQ,CAACvB,SAAS,IAAI,CAACuB,QAAQ,CAACC,MAAM;EAAA,CAAE,CAAC;AACnF"},"metadata":{},"sourceType":"module"}