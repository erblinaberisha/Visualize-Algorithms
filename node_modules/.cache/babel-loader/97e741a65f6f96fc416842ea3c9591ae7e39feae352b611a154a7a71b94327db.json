{"ast":null,"code":"export function getMaze(board, row, col) {\n  const pairs = [];\n  let newBoard = board.slice();\n  for (let i = 0; i < col; i++) {\n    newBoard[0][i].isWall = true;\n    pairs.push({\n      xx: 0,\n      yy: i\n    });\n  }\n  for (let i = 0; i < row; i++) {\n    newBoard[i][col - 1].isWall = true;\n    pairs.push({\n      xx: i,\n      yy: col - 1\n    });\n  }\n  for (let i = col - 1; i >= 0; i--) {\n    newBoard[row - 1][i].isWall = true;\n    pairs.push({\n      xx: row - 1,\n      yy: i\n    });\n  }\n  for (let i = row - 1; i >= 0; i--) {\n    newBoard[i][0].isWall = true;\n    pairs.push({\n      xx: i,\n      yy: 0\n    });\n  }\n  decideMaze(pairs, newBoard, 1, row - 2, 1, col - 2);\n  //console.log(\"here\");\n  return pairs;\n}\nlet val = 0;\nfunction decideMaze(pairs, board, startRow, endRow, startCol, endCol) {\n  //console.log(\"count\");\n  val++;\n  if (endRow - startRow <= 1 && endCol - startCol <= 1) {\n    return;\n  }\n  if (endCol - startCol > endRow - startRow) {\n    recursiveMazeVertical(pairs, board, startRow, endRow, startCol, endCol);\n  } else {\n    recursiveMazeHorizontal(pairs, board, startRow, endRow, startCol, endCol);\n  }\n}","map":{"version":3,"names":["getMaze","board","row","col","pairs","newBoard","slice","i","isWall","push","xx","yy","decideMaze","val","startRow","endRow","startCol","endCol","recursiveMazeVertical","recursiveMazeHorizontal"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/algorithms/recursiveMaze.js"],"sourcesContent":["export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nlet val = 0;\n\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n    val++;\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,KAAK,EAACC,GAAG,EAACC,GAAG,EAAC;EAClC,MAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC;EAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,GAAEJ,GAAG,EAACI,CAAC,EAAE,EAAC;IACtBF,QAAQ,CAAC,CAAC,CAAC,CAACE,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;IAC5BJ,KAAK,CAACK,IAAI,CAAC;MACPC,EAAE,EAAC,CAAC;MACJC,EAAE,EAACJ;IACP,CAAC,CAAC;EACN;EACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAACA,CAAC,GAAEL,GAAG,EAACK,CAAC,EAAE,EAAC;IACtBF,QAAQ,CAACE,CAAC,CAAC,CAACJ,GAAG,GAAC,CAAC,CAAC,CAACK,MAAM,GAAG,IAAI;IAChCJ,KAAK,CAACK,IAAI,CAAC;MACPC,EAAE,EAACH,CAAC;MACJI,EAAE,EAACR,GAAG,GAAC;IACX,CAAC,CAAC;EACN;EACA,KAAK,IAAII,CAAC,GAAGJ,GAAG,GAAC,CAAC,EAACI,CAAC,IAAE,CAAC,EAACA,CAAC,EAAE,EAAE;IACzBF,QAAQ,CAACH,GAAG,GAAC,CAAC,CAAC,CAACK,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;IAChCJ,KAAK,CAACK,IAAI,CAAC;MACPC,EAAE,EAACR,GAAG,GAAC,CAAC;MACRS,EAAE,EAACJ;IACP,CAAC,CAAC;EACN;EACA,KAAI,IAAIA,CAAC,GAAGL,GAAG,GAAC,CAAC,EAACK,CAAC,IAAE,CAAC,EAACA,CAAC,EAAE,EAAC;IACvBF,QAAQ,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;IAC5BJ,KAAK,CAACK,IAAI,CAAC;MACPC,EAAE,EAACH,CAAC;MACJI,EAAE,EAAC;IACP,CAAC,CAAC;EACN;EACAC,UAAU,CAACR,KAAK,EAACC,QAAQ,EAAC,CAAC,EAACH,GAAG,GAAC,CAAC,EAAC,CAAC,EAACC,GAAG,GAAC,CAAC,CAAC;EAC1C;EACA,OAAOC,KAAK;AAChB;AACA,IAAIS,GAAG,GAAG,CAAC;AAEX,SAASD,UAAUA,CAACR,KAAK,EAACH,KAAK,EAACa,QAAQ,EAACC,MAAM,EAACC,QAAQ,EAACC,MAAM,EAAE;EAC7D;EACAJ,GAAG,EAAE;EAEL,IAAME,MAAM,GAACD,QAAQ,IAAI,CAAC,IAAOG,MAAM,GAAGD,QAAQ,IAAI,CAAE,EAAE;IACtD;EACJ;EAEC,IAAKC,MAAM,GAAGD,QAAQ,GAAKD,MAAM,GAAGD,QAAS,EAAE;IAC5CI,qBAAqB,CAACd,KAAK,EAACH,KAAK,EAACa,QAAQ,EAACC,MAAM,EAACC,QAAQ,EAACC,MAAM,CAAC;EACtE,CAAC,MAAK;IACFE,uBAAuB,CAACf,KAAK,EAACH,KAAK,EAACa,QAAQ,EAACC,MAAM,EAACC,QAAQ,EAACC,MAAM,CAAC;EACxE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}