{"ast":null,"code":"export function convex_hull(points) {\n  if (points.size === 1) {\n    return;\n  }\n  var pointStart = points[0];\n  var pointEnd = points[points.length - 1];\n  var up = [],\n    down = [];\n  var pairs = [];\n  var lines = [];\n  up.push(pointStart);\n  down.push(pointStart);\n  for (var i = 1; i < points.length; i++) {\n    if (i === points.length - 1 || cw(pointStart, points[i], pointEnd)) {\n      while (up.length >= 2 && !cw(up[up.length - 2], up[up.length - 1], points[i])) {\n        lines.push({\n          from: up[up.length - 2],\n          to: up[up.length - 1],\n          add: false\n        });\n        up.pop();\n      }\n      up.push(points[i]);\n      lines.push({\n        from: up[up.length - 2],\n        to: up[up.length - 1],\n        add: true\n      });\n    }\n  }\n  for (var _i = 0; _i < points.length; _i++) {\n    if (_i === points.length - 1 || ccw(pointStart, points[_i], pointEnd)) {\n      while (down.length >= 2 && !ccw(down[down.length - 2], down[down.length - 1], points[_i])) {\n        lines.push({\n          from: down[down.length - 2],\n          to: down[down.length - 1],\n          add: false\n        });\n        down.pop();\n      }\n      down.push(points[_i]);\n      lines.push({\n        from: down[down.length - 2],\n        to: down[down.length - 1],\n        add: true\n      });\n    }\n  }\n  for (var _i2 = 0; _i2 < up.length; _i2++) {\n    pairs.push(up[_i2]);\n  }\n  for (var _i3 = down.length - 2; _i3 > 0; _i3--) {\n    pairs.push(down[_i3]);\n  }\n  return [pairs, lines];\n}\nfunction cw(a, b, c) {\n  var f = a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy);\n  if (a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) < 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction ccw(a, b, c) {\n  if (a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}","map":{"version":3,"names":["convex_hull","points","size","pointStart","pointEnd","length","up","down","pairs","lines","push","i","cw","from","to","add","pop","ccw","a","b","c","f","xx","yy"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/algorithms/grahamScan.js"],"sourcesContent":["export function convex_hull(points){\n    if( points.size === 1 ){\n        return;\n    }\n    const pointStart = points[0];\n    const pointEnd = points[ points.length-1 ];\n    const up = [], down = [];\n    const pairs = [];\n    const lines=[];\n    up.push( pointStart);\n    down.push(pointStart);\n    for( let i = 1; i< points.length ;i++ ){\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\n                lines.push({\n                    from:up[up.length-2],\n                    to:up[up.length-1],\n                    add:false\n                });\n                up.pop();\n            }\n            up.push( points[i] );\n            lines.push({\n                from:up[up.length-2],\n                to:up[up.length-1],\n                add:true\n            })\n        }\n\n    }\n    for(let i = 0; i< points.length;i++){\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\n                lines.push({\n                    from:down[down.length-2],\n                    to:down[down.length-1],\n                    add:false\n                });\n                down.pop();\n            }\n            down.push( points[i] );\n            lines.push({\n                from:down[down.length-2],\n                to:down[down.length-1],\n                add:true\n            })\n        }\n    }\n\n    for (let i = 0; i < up.length; i++){\n        pairs.push(up[i]);\n    }\n    for (let i = down.length - 2; i > 0; i--) {\n        pairs.push(down[i]);\n    }\n    return [pairs,lines];\n}\n\nfunction cw(a, b, c) {\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\n        return true;\n    } else{\n        return false;\n    }\n\n}\n\nfunction ccw(a, b, c){\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\n        return true;\n    } else {\n        return false;\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}