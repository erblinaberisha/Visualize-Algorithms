{"ast":null,"code":"export function randomMaze(board, row, col) {\n  let newBoard = board.slice();\n  const pairs = [];\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < col; j++) {\n      const random = Math.floor(Math.random() * 100) + 10;\n      if (random % 4 === 0) {\n        newBoard[i][j].isWall = true;\n        pairs.push({\n          xx: i,\n          yy: j\n        });\n      }\n    }\n  }\n  return pairs;\n}","map":{"version":3,"names":["randomMaze","board","row","col","newBoard","slice","pairs","i","j","random","Math","floor","isWall","push","xx","yy"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/algorithms/randomMaze.js"],"sourcesContent":["export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,KAAK,EAACC,GAAG,EAACC,GAAG,EAAC;EACrC,IAAIC,QAAQ,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC;EAC5B,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,GAACL,GAAG,EAACK,CAAC,EAAE,EAAC;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,GAAEL,GAAG,EAACK,CAAC,EAAE,EAAC;MACtB,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAC,GAAG,CAAC,GAAC,EAAE;MAC/C,IAAIA,MAAM,GAAC,CAAC,KAAK,CAAC,EAAE;QAChBL,QAAQ,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACI,MAAM,GAAG,IAAI;QAC5BN,KAAK,CAACO,IAAI,CAAC;UACPC,EAAE,EAACP,CAAC;UACJQ,EAAE,EAACP;QACP,CAAC,CAAC;MACN;IACJ;EACJ;EACA,OAAOF,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}