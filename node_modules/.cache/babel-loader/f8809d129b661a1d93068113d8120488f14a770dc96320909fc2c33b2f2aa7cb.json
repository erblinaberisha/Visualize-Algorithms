{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\AlgorithmVisualizer-master\\\\src\\\\Visualizer.jsx\";\nimport React, { Component } from 'react';\nimport './Visualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Visualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'main',\n      rendering: false,\n      algorithms: [],\n      currentAlgorithm: null,\n      goFunction: () => {},\n      resetFunction: () => {},\n      setAlgorithm: () => {},\n      sortingClicked: false,\n      pathClicked: false,\n      AIClicked: false,\n      aicount: 0\n    };\n    this.changeRenderingState = this.changeRenderingState.bind(this);\n  }\n  changeRenderingState(rendering) {\n    this.setState({\n      rendering: rendering\n    });\n  }\n  render() {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"welbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container welc\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"mainpage-b\",\n          onClick: () => {\n            if (!this.state.rendering) {\n              this.setState({\n                mode: 'pathfinding'\n              });\n              this.setState({\n                currentAlgorithm: null,\n                pathClicked: true\n              });\n            }\n          },\n          \"data-toggle\": this.state.pathClicked ? \"\" : \"modal\",\n          \"data-target\": \"#pathIntroModal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), \"PATH FINDING\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal fade\",\n        id: \"pathIntroModal\",\n        role: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content intro\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"modal-title\",\n                children: \"Pathfinding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"close\",\n                \"data-dismiss\": \"modal\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-body intro\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Pathfinding is generally the process of finding a route between two points. It is closely related to the shortest path problem in graph theory, which examines how to identify the \\\"best\\\" paths valued by different criteria (Ex. distance, cost, time consumption).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Pathfinding is also similar to Searching in some circumstances. For instance, we can use [breadth-first search] to find the shortest path in a grid world.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"In our scenario, the paths are valued by the number of cells they passed from START:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"simg\",\n                  width: \"20\",\n                  height: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), \"to the TARGET:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"fimg\",\n                  width: \"20\",\n                  height: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You may drag the START and TARGET icons to change their positions, and click on the blank nodes to add Walls.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Now please choose a sorting algorithm and visualize it!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"tips\",\n                children: \"(after choosing an algorithm, click on the [Actions] button.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 114\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"tips\",\n                children: \"Note: there could be multiple \\\"best\\\" paths, so paths generated by different algorithms may not be consistent.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-dark\",\n                \"data-dismiss\": \"modal\",\n                style: {\n                  width: '100px'\n                },\n                children: \"OK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","Visualizer","constructor","props","state","mode","rendering","algorithms","currentAlgorithm","goFunction","resetFunction","setAlgorithm","sortingClicked","pathClicked","AIClicked","aicount","changeRenderingState","bind","setState","render","class","children","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","role","type","width","height","style"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/Visualizer.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './Visualizer.css'\n\nexport default class Visualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'main',\n            rendering: false,\n            algorithms: [],\n            currentAlgorithm: null,\n            goFunction: () => { },\n            resetFunction: () => { },\n            setAlgorithm: () => { },\n            sortingClicked: false,\n            pathClicked: false,\n            AIClicked: false,\n            aicount: 0,\n        };\n        this.changeRenderingState = this.changeRenderingState.bind(this);\n    }\n\n    changeRenderingState(rendering) {\n        this.setState({ rendering: rendering });\n    }\n\n    render() {\n                <div class=\"welbotron\">\n\n                    <div class=\"container welc\">\n\n                        <a href='#' class='mainpage-b' onClick={() => {\n                            if (!this.state.rendering) {\n                                this.setState({ mode: 'pathfinding' });\n                                this.setState({ currentAlgorithm: null, pathClicked: true });\n                            }\n                        }} data-toggle={this.state.pathClicked ? \"\" : \"modal\"} data-target=\"#pathIntroModal\">\n                            <span></span>\n                            PATH FINDING\n                        </a>\n                        \n                    </div>\n                </div>\n        return (\n            <>\n                <div class=\"modal fade\" id=\"pathIntroModal\" role=\"dialog\">\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content intro\">\n\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">Pathfinding</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n\n                            <div class=\"modal-body intro\">\n                                <p>\n                                    Pathfinding is generally the process of finding a route between two points. It is closely related to the shortest path problem in graph theory,\n                                    which examines how to identify the \"best\" paths valued by different criteria (Ex. distance, cost, time consumption).\n                                </p>\n                                <p>Pathfinding is also similar to Searching in some circumstances. For instance, we can use [breadth-first search] to find the shortest path in a grid world.</p>\n                                <p>\n                                    In our scenario, the paths are valued by the number of cells they passed from START:\n                                    <div class=\"simg\" width=\"20\" height=\"20\"></div>\n                                    to the TARGET:\n                                    <div class=\"fimg\" width=\"20\" height=\"20\"></div>\n                                    .\n                                </p>\n                                <p>You may drag the START and TARGET icons to change their positions, and click on the blank nodes to add Walls.</p>\n\n                                <p>Now please choose a sorting algorithm and visualize it!</p>\n                                <p class='tips'>(after choosing an algorithm, click on the [Actions] button.)</p><br />\n                                <p class='tips'>Note: there could be multiple \"best\" paths, so paths generated by different algorithms may not be consistent.</p>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-dark\" data-dismiss=\"modal\" style={{ width: '100px' }}>OK</button>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}