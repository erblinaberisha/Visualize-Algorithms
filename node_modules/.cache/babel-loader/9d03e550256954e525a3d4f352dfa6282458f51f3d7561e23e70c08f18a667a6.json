{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\AlgorithmVisualizer-master\\\\src\\\\Graph\\\\graph.jsx\";\nimport React, { Component } from 'react';\nimport CanvasSvg from \"./canvasSVG\";\nimport { getFibTree, getTree } from \"./fib\";\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Details from \"./details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Graph extends Component {\n  constructor() {\n    super();\n    // setNumber = (event)=>{\n    //     let value = event.target.valueAsNumber;\n    //     if(value!== NaN && value<99)\n    //         this.setState({inputNumber:value});\n    //\n    //     // document\n    // }\n    this.setAlgo = (pos, val) => {\n      if (pos === 0) {\n        // console.log(\"sup 0\");\n        this.setState({\n          algo: val\n        });\n      }\n    };\n    this.setN = (pos, val) => {\n      if (pos === 0) {\n        // console.log(\"sup 0\");\n        this.setState({\n          n: val\n        });\n      }\n    };\n    this.setR = (pos, val) => {\n      if (pos === 0) {\n        // console.log(\"sup 0\");\n        this.setState({\n          r: val\n        });\n      }\n    };\n    this.addNumber = () => {\n      // console.log(getFibTree(3));\n      let tree = getTree(this.state.n, this.state.algo, this.state.r);\n      this.setState({\n        edges: [],\n        vertices: [],\n        offset: tree.x\n      });\n      this.state.vertices = [];\n      // this.setState({});\n      this.recur(tree, undefined);\n    };\n    this.recur = async (node, parent) => {\n      let vertices = this.state.vertices;\n      let current = this.state.vertices.length;\n      if (parent !== undefined) {\n        if (node.children.length) vertices.push({\n          label: node.tree.label,\n          val: 0,\n          x: node.x,\n          y: node.y,\n          px: parent.x,\n          py: parent.y\n        });else vertices.push({\n          label: node.tree.label,\n          val: node.tree.node,\n          x: node.x,\n          y: node.y,\n          px: parent.x,\n          py: parent.y\n        });\n        this.setState({\n          vertices,\n          current\n        });\n        let edges = this.state.edges;\n        edges.push({\n          x1: parent.x,\n          y1: parent.y,\n          x2: node.x,\n          y2: node.y\n        });\n        this.setState({\n          edges\n        });\n      } else {\n        if (node.children.length) vertices.push({\n          label: node.tree.label,\n          val: 0,\n          x: node.x,\n          y: node.y,\n          px: node.x,\n          py: node.y\n        });else vertices.push({\n          label: node.tree.label,\n          val: node.tree.node,\n          x: node.x,\n          y: node.y,\n          px: node.x,\n          py: node.y\n        });\n        this.setState({\n          vertices,\n          current\n        });\n      }\n      await sleep(500);\n      for (let i = 0; i < node.children.length; i++) {\n        await this.recur(node.children[i], node);\n        // let verticess = [...this.state.vertices];\n        // verticess[current].val+=node.children[i].tree.node;\n        this.setState({\n          current\n        });\n        await sleep(500);\n      }\n      let verticess = [...this.state.vertices];\n      verticess[current].val = node.tree.node;\n      this.setState({\n        vertices: verticess\n      });\n    };\n    this.state = {\n      root: undefined,\n      vertices: [],\n      edges: [],\n      current: -1,\n      n: 0,\n      r: 2,\n      algo: 0,\n      offset: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        setN: this.setN,\n        setR: this.setR,\n        setAlgo: this.setAlgo,\n        onStart: this.addNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        algo: this.state.algo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CanvasSvg, {\n        vertices: this.state.vertices,\n        edges: this.state.edges,\n        current: this.state.current,\n        offset: this.state.offset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Graph;","map":{"version":3,"names":["React","Component","CanvasSvg","getFibTree","getTree","Menu","Navbar","Details","jsxDEV","_jsxDEV","Graph","constructor","setAlgo","pos","val","setState","algo","setN","n","setR","r","addNumber","tree","state","edges","vertices","offset","x","recur","undefined","node","parent","current","length","children","push","label","y","px","py","x1","y1","x2","y2","sleep","i","verticess","root","render","fileName","_jsxFileName","lineNumber","columnNumber","onStart","ms","Promise","resolve","setTimeout"],"sources":["C:/Users/Admin/Desktop/AlgorithmVisualizer-master/src/Graph/graph.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport CanvasSvg from \"./canvasSVG\";\nimport {getFibTree, getTree} from \"./fib\";\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Details from \"./details\";\n\nclass Graph extends Component {\n    constructor() {\n        super();\n        this.state = {\n            root:undefined,\n            vertices:[],\n            edges:[],\n            current:-1,\n            n:0,\n            r:2,\n            algo:0,\n            offset:0\n        }\n    }\n    // setNumber = (event)=>{\n    //     let value = event.target.valueAsNumber;\n    //     if(value!== NaN && value<99)\n    //         this.setState({inputNumber:value});\n    //\n    //     // document\n    // }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    setN = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({n: val});\n        }\n    }\n    setR = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({r: val});\n        }\n    }\n    addNumber = ()=>{\n        // console.log(getFibTree(3));\n        let tree = getTree(this.state.n,this.state.algo,this.state.r);\n        this.setState({edges:[],vertices:[],offset:tree.x});\n        this.state.vertices = [];\n        // this.setState({});\n        this.recur(tree,undefined);\n\n    }\n    recur = async (node,parent)=>{\n\n        let vertices = this.state.vertices;\n        let current = this.state.vertices.length;\n\n\n        if( parent!==undefined ){\n            if( node.children.length )\n                vertices.push({label:node.tree.label,val:0,x:node.x,y:node.y,px:parent.x,py:parent.y});\n            else\n                vertices.push({label:node.tree.label,val:node.tree.node,x:node.x,y:node.y,px:parent.x,py:parent.y});\n            this.setState({vertices,current});\n\n\n\n            let edges = this.state.edges;\n            edges.push({\n                x1:parent.x,\n                y1:parent.y,\n                x2:node.x,\n                y2:node.y\n            });\n            this.setState({edges});\n        }else{\n            if( node.children.length )\n                vertices.push({label:node.tree.label,val:0,x:node.x,y:node.y,px:node.x,py:node.y});\n            else\n                vertices.push({label:node.tree.label,val:node.tree.node,x:node.x,y:node.y,px:node.x,py:node.y});\n            this.setState({vertices,current});\n        }\n        await sleep(500);\n\n\n        for(let i=0;i<node.children.length;i++){\n            await this.recur( node.children[i],node );\n            // let verticess = [...this.state.vertices];\n            // verticess[current].val+=node.children[i].tree.node;\n            this.setState({current});\n            await sleep(500);\n        }\n        let verticess = [...this.state.vertices];\n        verticess[current].val=node.tree.node;\n        this.setState({vertices:verticess});\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    setN={this.setN}\n                    setR={this.setR}\n                    setAlgo={this.setAlgo}\n                    onStart={this.addNumber}\n                />\n                <Details\n                    algo={this.state.algo}\n                />\n                <CanvasSvg\n                    vertices={this.state.vertices}\n                    edges={this.state.edges}\n                    current={this.state.current}\n                    offset={this.state.offset}\n                />\n            </div>\n        );\n    }\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Graph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}